{"version":3,"file":"button.js","sourceRoot":"","sources":["../../../src/commands/testing/button.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,yCAA+E;AAG/E,kBAAe;IACX,QAAQ,EAAE,SAAS;IACnB,WAAW,EAAE,gBAAgB;IAC7B,KAAK,EAAE,IAAI;IACX,QAAQ,EAAE,IAAI;IACd,SAAS,EAAE,IAAI;IAEf,QAAQ,EAAE,UAAO,EAAgC;YAAjB,MAAM,iBAAA,EAAE,OAAO,aAAA;;;;;;wBACrC,GAAG,GAAG,IAAI,6BAAgB,EAAE;6BAC7B,aAAa,CACV,IAAI,0BAAa,EAAE;6BACd,WAAW,CAAC,SAAS,CAAC;6BACtB,QAAQ,CAAC,IAAI,CAAC;6BACd,QAAQ,CAAC,SAAS,CAAC;6BACnB,QAAQ,CAAC,QAAQ,CAAC,CAC1B;6BACA,aAAa,CACV,IAAI,0BAAa,EAAE;6BACd,WAAW,CAAC,QAAQ,CAAC;6BACrB,QAAQ,CAAC,QAAQ,CAAC;6BAClB,QAAQ,CAAC,WAAW,CAAC,CAC7B,CAAA;wBAEC,OAAO,GAAG,IAAI,6BAAgB,EAAE;6BACjC,aAAa,CACV,IAAI,0BAAa,EAAE;6BACd,MAAM,CAAC,uBAAuB,CAAC;6BAC/B,QAAQ,CAAC,iBAAiB,CAAC;6BAC3B,QAAQ,CAAC,MAAM,CAAC,CACxB,CAAA;wBAEL,WAAM,MAAM,CAAC,KAAK,CAAC;gCACf,OAAO,EAAE,eAAe;gCACxB,UAAU,EAAE,CAAC,GAAG,EAAE,OAAO,CAAC;gCAC1B,SAAS,EAAE,KAAK;6BACnB,CAAC,EAAA;;wBAJF,SAIE,CAAA;wBAEI,MAAM,GAAG,UAAC,MAAyB;4BACrC,OAAO,MAAM,CAAC,IAAI,CAAC,EAAE,KAAK,MAAM,CAAC,IAAI,CAAC,EAAE,CAAA;wBAC5C,CAAC,CAAA;wBAEK,SAAS,GAAG,OAAO,CAAC,+BAA+B,CAAC;4BACtD,MAAM,QAAA;4BACN,GAAG,EAAE,CAAC;4BACN,IAAI,EAAE,IAAI,GAAG,EAAE;yBAClB,CAAC,CAAA;wBASF,SAAS,CAAC,EAAE,CAAC,KAAK,EAAE,UAAO,SAAS;;;;;wCAChC,IAAI,SAAS,CAAC,IAAI,KAAK,CAAC,EAAE;4CACtB,MAAM,CAAC,SAAS,CAAC;gDACb,OAAO,EAAE,gCAAgC;gDACzC,UAAU,EAAE,EAAE;6CACjB,CAAC,CAAA;4CACF,WAAM;yCACT;wCAED,SAAS,CAAC,OAAO,CAAC,UAAC,KAAK,IAAK,OAAA,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,QAAQ,CAAC,EAA1C,CAA0C,CAAC,CAAA;6CAEpE,CAAA,CAAA,MAAA,SAAS,CAAC,KAAK,EAAE,0CAAE,QAAQ,MAAK,SAAS,CAAA,EAAzC,cAAyC;wCAEzC,WAAM,MAAM,CAAC,SAAS,CAAC;gDACnB,OAAO,EAAE,mCAAmC;gDAC5C,UAAU,EAAE,EAAE;6CACjB,CAAC,EAAA;;wCAHF,SAGE,CAAA;;;6CACK,CAAA,CAAA,MAAA,SAAS,CAAC,KAAK,EAAE,0CAAE,QAAQ,MAAK,QAAQ,CAAA,EAAxC,cAAwC;wCAC/C,WAAM,MAAM,CAAC,SAAS,CAAC;gDACnB,OAAO,EAAE,iCAAiC;gDAC1C,UAAU,EAAE,EAAE;6CACjB,CAAC,EAAA;;wCAHF,SAGE,CAAA;;;;;6BAET,CAAC,CAAA;;;;;KACL;CACQ,CAAA","sourcesContent":["import { ButtonInteraction, MessageActionRow, MessageButton } from 'discord.js'\r\nimport { ICommand } from 'wokcommands'\r\n\r\nexport default {\r\n    category: 'Testing',\r\n    description: 'Send an embed.',\r\n    slash: true,\r\n    testOnly: true,\r\n    ownerOnly: true,\r\n\r\n    callback: async ({ interaction: msgInt, channel }) => {\r\n        const row = new MessageActionRow()\r\n            .addComponents(\r\n                new MessageButton()\r\n                    .setCustomId('ban_yes')\r\n                    .setEmoji('ðŸ”¨')\r\n                    .setLabel('Confirm')\r\n                    .setStyle('DANGER')\r\n            )\r\n            .addComponents(\r\n                new MessageButton()\r\n                    .setCustomId('ban_no')\r\n                    .setLabel('Cancel')\r\n                    .setStyle('SECONDARY')\r\n            )\r\n\r\n        const linkRow = new MessageActionRow()\r\n            .addComponents(\r\n                new MessageButton()\r\n                    .setURL('https://otakunity.net')\r\n                    .setLabel('Visit Otakunity')\r\n                    .setStyle('LINK')\r\n            )\r\n\r\n        await msgInt.reply({\r\n            content: 'Are you sure?',\r\n            components: [row, linkRow],\r\n            ephemeral: false,\r\n        })\r\n\r\n        const filter = (btnInt: ButtonInteraction) => {\r\n            return msgInt.user.id === btnInt.user.id\r\n        }\r\n\r\n        const collector = channel.createMessageComponentCollector({\r\n            filter,\r\n            max: 1,\r\n            time: 1000 * 15,\r\n        })\r\n\r\n        // collector.on('collect', (i: ButtonInteraction) => {\r\n        //     i.reply({\r\n        //         content: 'You clicked a button',\r\n        //         ephemeral: true,\r\n        //     })\r\n        // })\r\n\r\n        collector.on('end', async (collected) => {\r\n            if (collected.size === 0) {\r\n                msgInt.editReply({\r\n                    content: 'â›” You did not respond in time.',\r\n                    components: [],\r\n                })\r\n                return\r\n            }\r\n\r\n            collected.forEach((click) => console.log(click.user.id, click.customId))\r\n\r\n            if (collected.first()?.customId === 'ban_yes') {\r\n                // Ban the target user\r\n                await msgInt.editReply({\r\n                    content: 'An action has already been taken.',\r\n                    components: [],\r\n                })\r\n            } else if (collected.first()?.customId === 'ban_no') {\r\n                await msgInt.editReply({\r\n                    content: \"Interaction has been cancelled.\",\r\n                    components: [],\r\n                })\r\n            }\r\n        })\r\n    },\r\n} as ICommand"]}